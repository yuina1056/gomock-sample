// Code generated by MockGen. DO NOT EDIT.
// Source: httpaccess/httpAccess.go

// Package mock_httpaccess is a generated GoMock package.
package mock_httpaccess

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockTestAPI is a mock of TestAPI interface
type MockTestAPI struct {
	ctrl     *gomock.Controller
	recorder *MockTestAPIMockRecorder
}

// MockTestAPIMockRecorder is the mock recorder for MockTestAPI
type MockTestAPIMockRecorder struct {
	mock *MockTestAPI
}

// NewMockTestAPI creates a new mock instance
func NewMockTestAPI(ctrl *gomock.Controller) *MockTestAPI {
	mock := &MockTestAPI{ctrl: ctrl}
	mock.recorder = &MockTestAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTestAPI) EXPECT() *MockTestAPIMockRecorder {
	return m.recorder
}

// GET mocks base method
func (m *MockTestAPI) GET(urlString, authorization string, responseJSON interface{}) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GET", urlString, authorization, responseJSON)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GET indicates an expected call of GET
func (mr *MockTestAPIMockRecorder) GET(urlString, authorization, responseJSON interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GET", reflect.TypeOf((*MockTestAPI)(nil).GET), urlString, authorization, responseJSON)
}
